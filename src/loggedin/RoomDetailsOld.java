/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loggedin;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Ivan Adcan
 */
public class RoomDetailsOld extends javax.swing.JFrame {
    
    String roomChosen;
    int roomImages = 1;

    /**
     * Creates new form Login
     */
    public RoomDetailsOld() {
        setUndecorated(true);
        initComponents();
        loadRoomDetails();
        loadImage();
    }
    
    public void bgGoldfgWhite() {
        Color gold;
        gold = new Color(230,192,104);
        setBackground(gold);
        setForeground(new Color(255,255,255));
    }
    
    public void bgWhitefgGold() {
        Color gold;
        gold = new Color(230,192,104);
        setBackground(new Color(255,255,255));
        setForeground(gold);
    }
    
    public String roomCheck() {
        try {
            List<String> lines = Files.readAllLines(Paths.get("room.txt"));
            for (String line : lines) {
                System.out.println(line);
                roomChosen = line;
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading the file.");
            e.printStackTrace();
        }
        return roomChosen;
    }
    
    public void loadRoomDetails() {
        roomCheck();
        String SUrl, SUser, SPass;
            SUrl = "jdbc:MySQL://localhost:3306/akatsukihotel_user_database";
            SUser = "root";
            SPass = "";
        
        try (Connection con = DriverManager.getConnection(SUrl, SUser, SPass)) {
            Statement st = con.createStatement();
            String query = "SELECT * FROM rooms WHERE id = " + roomChosen;
            ResultSet rs = st.executeQuery(query);
            
            while (rs.next()) {
                String roomtype, goodfor, goodfor1, goodfor2, Price1, Price2;
                    roomtype = rs.getString("RoomType");
                    goodfor = rs.getString("GoodFor");
                    goodfor1 = rs.getString("GoodFor1");
                    goodfor2 = rs.getString("GoodFor2");
                    Price1 = rs.getString("Price1");
                    Price2 = rs.getString("Price2");
                roomType.setText(roomtype);
                goodFor.setText(goodfor);
                goodFor1.setText("Good for " + goodfor1);
                goodFor2.setText("Good for " + goodfor2);
                price1.setText("P " + Price1);
                price2.setText("P " + Price2);
            }
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }
    
    public void loadImage() {
        String SUrl, SUser, SPass;
            SUrl = "jdbc:MySQL://localhost:3306/akatsukihotel_user_database";
            SUser = "root";
            SPass = "";
        try (Connection con = DriverManager.getConnection(SUrl, SUser, SPass)) {
            Statement st = con.createStatement();
            String query = "SELECT * FROM rooms WHERE id = " + roomChosen;
            ResultSet rs = st.executeQuery(query);
            rs.next();
            Blob imageBlob = rs.getBlob("Img" + roomImages);
            byte[] bytes = imageBlob.getBytes(1, (int) imageBlob.length());
            ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
            BufferedImage image = ImageIO.read(bis);
            imageShow.setIcon(new ImageIcon(image));
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelWrapper1 = new javax.swing.JPanel();
        panelWrapper = new javax.swing.JPanel();
        textWelcom1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        imageShow = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        roomType = new javax.swing.JLabel();
        goodFor = new javax.swing.JLabel();
        price1 = new javax.swing.JLabel();
        goodFor1 = new javax.swing.JLabel();
        goodFor2 = new javax.swing.JLabel();
        price2 = new javax.swing.JLabel();
        add1 = new javax.swing.JButton();
        subtract1 = new javax.swing.JButton();
        close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Akatsuki Hotel Inc.");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        panelWrapper1.setBackground(new java.awt.Color(230, 192, 104));
        panelWrapper1.setPreferredSize(new java.awt.Dimension(1900, 980));

        panelWrapper.setBackground(new java.awt.Color(255, 255, 255));
        panelWrapper.setPreferredSize(new java.awt.Dimension(1900, 980));
        panelWrapper.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textWelcom1.setFont(new java.awt.Font("Baskerville Old Face", 1, 67)); // NOI18N
        textWelcom1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textWelcom1.setText("Details");
        panelWrapper.add(textWelcom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 45, 519, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Room Type");
        panelWrapper.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 149, 147, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Price");
        panelWrapper.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 627, 147, -1));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Good for");
        panelWrapper.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 190, 147, -1));

        imageShow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageShow.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageShow.setMinimumSize(new java.awt.Dimension(380, 380));
        imageShow.setPreferredSize(new java.awt.Dimension(380, 380));
        panelWrapper.add(imageShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText(":");
        panelWrapper.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 149, -1, -1));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText(":");
        panelWrapper.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 190, -1, -1));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText(":");
        panelWrapper.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 627, -1, -1));

        roomType.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        roomType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        roomType.setText("null");
        panelWrapper.add(roomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 149, 337, -1));

        goodFor.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        goodFor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        goodFor.setText("null");
        panelWrapper.add(goodFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 190, 337, -1));

        price1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        price1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        price1.setText("null");
        panelWrapper.add(price1, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 668, 290, -1));

        goodFor1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        goodFor1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        goodFor1.setText("Good for ");
        panelWrapper.add(goodFor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 668, 222, -1));

        goodFor2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        goodFor2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        goodFor2.setText("Good for ");
        panelWrapper.add(goodFor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 709, 222, -1));

        price2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        price2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        price2.setText("null");
        panelWrapper.add(price2, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 709, 290, -1));

        add1.setBackground(new java.awt.Color(255, 255, 255));
        add1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        add1.setForeground(new java.awt.Color(0, 104, 104));
        add1.setText(">");
        add1.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        add1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                add1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                add1FocusLost(evt);
            }
        });
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });
        panelWrapper.add(add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 396, -1, -1));

        subtract1.setBackground(new java.awt.Color(255, 255, 255));
        subtract1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        subtract1.setForeground(new java.awt.Color(0, 104, 104));
        subtract1.setText("<");
        subtract1.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        subtract1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                subtract1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                subtract1FocusLost(evt);
            }
        });
        subtract1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtract1ActionPerformed(evt);
            }
        });
        panelWrapper.add(subtract1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 396, -1, -1));

        close.setBackground(new java.awt.Color(255, 255, 255));
        close.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        close.setForeground(new java.awt.Color(0, 104, 104));
        close.setText("X");
        close.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        close.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                closeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                closeFocusLost(evt);
            }
        });
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        panelWrapper.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 13, -1, -1));

        javax.swing.GroupLayout panelWrapper1Layout = new javax.swing.GroupLayout(panelWrapper1);
        panelWrapper1.setLayout(panelWrapper1Layout);
        panelWrapper1Layout.setHorizontalGroup(
            panelWrapper1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWrapper1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelWrapper1Layout.setVerticalGroup(
            panelWrapper1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWrapper1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelWrapper1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelWrapper1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_add1FocusGained
        Color darkgreen = new Color(0,104,104);
        add1.setBackground(darkgreen);
        add1.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_add1FocusGained

    private void add1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_add1FocusLost
        Color darkgreen = new Color(0,104,104);
        add1.setForeground(darkgreen);
        add1.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_add1FocusLost

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        roomImages++;
        if (roomImages > 3) {
            roomImages = 1;
        }
        System.out.println("Increment: " + roomImages);
        loadImage();
    }//GEN-LAST:event_add1ActionPerformed

    private void subtract1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subtract1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_subtract1FocusGained

    private void subtract1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subtract1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_subtract1FocusLost

    private void subtract1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtract1ActionPerformed
        roomImages--;
        if (roomImages < 1) {
            roomImages = 3;
        }
        System.out.println("Decrement: " + roomImages);
        loadImage();
    }//GEN-LAST:event_subtract1ActionPerformed

    private void closeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_closeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_closeFocusGained

    private void closeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_closeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_closeFocusLost

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeActionPerformed

    /**
     * @param args the command line arguments
     */

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton add1;
    public javax.swing.JButton close;
    private javax.swing.JLabel goodFor;
    private javax.swing.JLabel goodFor1;
    private javax.swing.JLabel goodFor2;
    private javax.swing.JLabel imageShow;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panelWrapper;
    private javax.swing.JPanel panelWrapper1;
    private javax.swing.JLabel price1;
    private javax.swing.JLabel price2;
    private javax.swing.JLabel roomType;
    public javax.swing.JButton subtract1;
    private javax.swing.JLabel textWelcom1;
    // End of variables declaration//GEN-END:variables
}
